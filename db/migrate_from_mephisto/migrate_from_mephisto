#!/usr/bin/env ruby

require 'rubygems'

gem 'activerecord'
require 'active_record'
require 'reformatter'

class ActiveRecord::Base
  def self.connect_to(db)
    establish_connection(
      :adapter  => "mysql",
      :host     => "localhost",
      :username => "root",
      :password => "password",
      :database => db
    )
  end
  
  def self.wordpress
    ($wordpress_classes ||= []) << self
    connect_to("stellsmi_wordpress_work")
  end
  
  def self.mephisto
    connect_to("mephisto_dev")
  end
end

def set_wordpress_db(db)
  $wordpress_classes.each do |wp_class|
    wp_class.connect_to(db)
  end
end

class WpPost < ActiveRecord::Base
  wordpress
end

class WpComment < ActiveRecord::Base
  wordpress
end

class WpUser < ActiveRecord::Base
  wordpress
end

class Sections < ActiveRecord::Base
  mephisto
  has_many :articles, :foreign_key => 'site_id'
end

class Content < ActiveRecord::Base
  mephisto
end

class Article < Content
  has_many :comments
end

class Comment < Content
end

def import_articles(articles)
  WpPost.delete_all
  WpComment.delete_all
  jeremy = WpUser.find_by_user_login('jeremy')
  
  
  articles.each do |content|
    puts content.title
    date = content.published_at
    unless date
      date = content.created_at
      puts "#{content.title} has no date, using #{date}"
    end
  
    wp_post = WpPost.create! :post_author => jeremy.ID,
                             :post_date => date,
                             :post_date_gmt => date,
                             :post_content => $reformatter.reformat(content.body),
                             :post_content_filtered => '',
                             :post_title => content.title,
                             :post_category => 0,
                             :post_status => 'publish',
                             :post_excerpt => '',
                             :comment_status => 'closed',
                             :ping_status => 'closed',
                             :post_name => content.permalink,
                             :to_ping => '',
                             :pinged => '',
                             :post_modified => date,
                             :post_modified_gmt => date,
                             :post_parent => 0,
                             :menu_order => 0,
                             :post_type => 'post',
                             :comment_count => content.comments.size
    # post.guid = 
  
    content.comments.each do |comment|
      wp_comment = WpComment.create! :comment_post_ID => wp_post.id,
                                     :comment_author => comment.author,
                                     :comment_author_email => comment.author_email || '',
                                     :comment_author_url => comment.author_url || '',
                                     # :comment_author_IP => ,
                                     :comment_date => comment.published_at,
                                     :comment_date_gmt => comment.published_at,
                                     :comment_content => comment.body,
                                     :comment_karma => 0,
                                     :comment_approved => comment.approved,
                                     # :comment_agent => ,
                                     # :comment_type => ,
                                     :comment_parent => 0,
                                     :user_id => 0
    end
  end
end

$reformatter = Reformatter.new
$reformatter.handle_links = proc do |name, url| 
  case url
  when /^http\:\/\/en.wikipedia.org\/wiki/
  when /^http\:\/\/www.google.com\/calendar/
  when /^http\:\/\/www.amazon.com/
  when /^http\:\/\/github.com/
  when /^http\:\/\/www.jpbutler.com/
  when /^http\:\/\/www.advisorteam.com/
  when /^http\:\/\/www.moretolife.org/
  when /pivotallabs.com/
  when "http://freeholdtheatre.org"
  when "http://cogentdude.com/"
  when "http://flickr.com/photos/justonefamily"
  when "http://cruisecontrolrb.lighthouseapp.com/"
  when "http://www.delicious-monster.com/"
  when "http://www.matt-smith.net/"
  when "http://burningman.com/"
  else
    puts "  [#{name}] => [#{url}]"
  end
end

$reformatter.handle_unknown_tags = proc do |tag| 
  case tag.gsub(/\<\/?/, '')
  when /^table/, /^tr/, /^td/
  when /^object/, /^embed/, /^param/
  else
    puts "  unknown tag! - #{tag}"
  end
  tag
end

life = Sections.find_by_name('life')
work = Sections.find_by_name('work')

puts "\nLoading work entries"

set_wordpress_db('stellsmi_wordpress_work')
import_articles(work.articles)

puts "\nLoading life entries"

set_wordpress_db('stellsmi_wordpress_life')
import_articles(life.articles)
